---
import "../../styles/lightbox.css";
import FooterLayout from "../../components/FooterComponent.astro";
import BrandTag from "../../components/BrandTag.astro";
import NavBar from "../../components/NavBar.astro";
import ThemeToggle from "../../layouts/ThemeToggle.astro";
import "../../styles/page-load.css";

// Static image data that doesn't change frequently.
const imagePrefix = "https://dyvkdbmmzvclydrmokpq.supabase.co/storage/v1/object/public/portraits";
const maxImages = 30;

const projectItems = Array.from({ length: maxImages }, (_, i) => {
    const imageNumber = i + 1; // Numbers from 1 to 30
    const imageSrc = `${imagePrefix}/${imageNumber}.webp`;
    const modalId = `image${imageNumber}`;

    return {
        imageNumber,
        imageSrc,
        modalId
    };
});
---

<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8"/>
    <meta
            name="description"
            content="Explore Hunter's stunning world of photography, showcasing the beauty of Nairobi, Kenya, and beyond. Through his lens, experience the vibrant landscapes, unforgettable wildlife, and compelling moments captured meticulously by this acclaimed local photographer."
    />
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>Portraits | Hunter</title>
    <link rel="icon" type="image/svg+xml" href="/assets/icons/hunter-logo.svg"/>
    <link rel="manifest" href="/manifest.json"/>
</head>
<body>
<ThemeToggle/>
<BrandTag/>
<NavBar/>
<main>
    <div class="title-wrapper"><h1>Portraits</h1></div>
    <div class="work-projects-container">
        {projectItems.map(item => (
                <div class="project-item">
                    <div class="project-modal" data-modal-target={`#${item.modalId}`}>
                        <img src={item.imageSrc} alt={`photo number ${item.imageNumber} on Hunter's Website`} loading="lazy" class="hero-fade" width="300" height="400" />
                        <div class="projects-description-wrapper">
                            <p>DSC082{item.imageNumber}</p>
                            <div class="icon">
                                <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="100%" height="100%" viewBox="0 0 16 16">
                                    <g transform="translate(0, 0)">
                                        <line fill="none" stroke="#ffffff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" x1="14.5" y1="1.5" x2="9.5" y2="6.5"></line>
                                        <line fill="none" stroke="#ffffff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" x1="6.5" y1="9.5" x2="1.5" y2="14.5"></line>
                                        <polyline fill="none" stroke="#ffffff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" points="8.5,1.5 14.5,1.5 14.5,7.5 "></polyline>
                                        <polyline fill="none" stroke="#ffffff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" points="1.5,8.5 1.5,14.5 7.5,14.5 "></polyline>
                                    </g>
                                </svg>
                            </div>
                        </div>
                    </div>
                    <div class="modal" id={item.modalId}>
                        <div class="modal-header">
                            <div class="title">DSC082{item.imageNumber}</div>
                            <button data-close-button class="close-button">Ã—</button>
                        </div>
                        <div class="modal-body">
                            <div class="project-grid">
                                <div class="content_image-wrapper">
                                    <img alt="project image" src={item.imageSrc} class="modal-image hero-fade">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
        ))}
    </div>
</main>

<div id="overlay"></div>
<FooterLayout/>

<style>
    .modal {
        display: none;
    }

    .modal.active {
        display: block;
    }

    #overlay {
        display: none;
    }

    #overlay.active {
        display: block;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
    }

    .close-button {
        cursor: pointer;
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const openModalButtons = document.querySelectorAll('[data-modal-target]');
        const closeModalButtons = document.querySelectorAll('[data-close-button]');
        const overlay = document.getElementById('overlay');

        // Open modal
        openModalButtons.forEach(button => {
            button.addEventListener('click', () => {
                const modal = document.querySelector(button.getAttribute('data-modal-target'));
                if (modal) {
                    modal.classList.add('active');
                    overlay.classList.add('active');
                }
            });
        });

        // Close modal
        closeModalButtons.forEach(button => {
            button.addEventListener('click', () => {
                const modal = button.closest('.modal');
                if (modal) {
                    modal.classList.remove('active');
                    overlay.classList.remove('active');
                }
            });
        });

        // Close modal when clicking overlay
        overlay.addEventListener('click', () => {
            document.querySelectorAll('.modal.active').forEach(modal => modal.classList.remove('active'));
            overlay.classList.remove('active');
        });
    });
</script>

</body>
</html>
